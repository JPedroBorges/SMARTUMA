import{convertColor}from'../lib/lib-graphics';import SymbolClass from'./symbolclass';import{ToolBarFactoryHelper,defTextStyle}from'./toolBarFactoryHelper';import{RSymbolFns}from'./helper';let UNDEF,TEXTBOX_SYMBOL='Internal_CB',TRANSPARENT_FILL=convertColor('FFFFFF',0);class CheckboxSymbol extends SymbolClass{configure(a,b,c,d,e){super.configure(TEXTBOX_SYMBOL);let f=this.config;f._id='TB_CBSYMBOL'+(c||0),f.symbol=TEXTBOX_SYMBOL,f.text={plaintext:a,node:UNDEF,style:defTextStyle},f.pId=d,f.chartId=e,f.checked=!!b,f.textNode=UNDEF,f.interPadding=3,f.pos={},f.regSymbolCmd=UNDEF,f.checked?this.check():this.uncheck()}check(){var a=this.config,b=a.pos;a.checked=!0,a.regSymbolCmd=RSymbolFns.CB_CHECKED,a.node&&(this.registerSymbol(a.regSymbolCmd),a.node.attr({"button-repaint":[b.x,b.y,b.width,b.height,b.r]}))}uncheck(){var a=this.config,b=a.pos;a.checked=!1,a.regSymbolCmd=RSymbolFns.CB_NOT_CHECKED,a.node&&(this.registerSymbol(a.regSymbolCmd),a.node.attr({"button-repaint":[b.x,b.y,b.width,b.height,b.r]}))}click(){let a=this.config;a.checked?this.uncheck():this.check()}attachEventHandlers(a){var b=this;SymbolClass.prototype.attachEventHandlers.apply(this,[a,{click:function(){b.click()}}])}getLogicalSpace(){var a,b,c=ToolBarFactoryHelper.getOptions(this.config.chartId).chart,d=this.config,e=c.linkedItems.smartLabel,f=d.text.style;return b=SymbolClass.prototype.getLogicalSpace.apply(this,arguments),e.useEllipsesOnOverflow(c.config.useEllipsesWhenOverflow),e.setStyle(f),a=e.getSmartText(d.text.plaintext),{width:a.width+d.interPadding+b.width,height:Math.max(b.height,a.height)}}draw(a,b,c){var d,e,f,g,h,i,j,k=this.config,l=k.conf,m=ToolBarFactoryHelper.getOptions(k.chartId).chart,n=m.getFromEnv('smartLabel'),o=m.getFromEnv('color-manager'),p=k.text.plaintext,q=ToolBarFactoryHelper.getComponentPool(k.chartId),r=q.getKeys();return this.registerSymbol(k.regSymbolCmd),d=k.node=SymbolClass.prototype.draw.apply(this,arguments),k.pos={x:a,y:b,width:l.width,height:l.height,r:l.radius},i=k.text.style,i.fill=i.fill||'#'+o.getColor('baseFontColor'),n.useEllipsesOnOverflow(m.config.useEllipsesWhenOverflow),n.setStyle(i),f=n.getSmartText(p),e=d.getBBox(),j=q.getComponent(k._id,k.pId,r.KEY_TEXT),k.textNode=j(c.parentLayer).attr({text:p,x:e.x+e.width+f.width/2+k.interPadding,y:e.y+e.height/2}).css(i),g=l.height>f.height?l.height:f.height,j=q.getComponent(k._id,k.pId,r.KEY_RECT),h=j(c.parentLayer).attr({height:g,width:e.width+f.width+k.interPadding,x:a,y:b,stroke:TRANSPARENT_FILL}),h}dispose(){let a=this.config;a.textNode&&a.textNode.remove(),a.textNode=UNDEF,super.dispose()}}export default CheckboxSymbol;