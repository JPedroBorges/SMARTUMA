import ComponentInterface from'../../core/component-interface';import{toRaphaelColor,pluck,pluckNumber}from'../../_internal/lib/lib';import{addDep}from'../../_internal/dependency-manager';import crosslineAnimation from'../../_internal/animation-rules/crossline-animation';let M='M',L='L',DEFAULTCOLOR='#EEEEEE',DEFAULTALPHA=50,BAND='band';class CrossLine extends ComponentInterface{constructor(){super(),addDep({name:'crosslineAnimation',type:'animationRule',extension:crosslineAnimation})}getName(){return'crossline'}getType(){return'crossline'}show(a={}){let b=this,c=!!a.onTop,d=a.type,e=b.config.prevRenderedOnTop;c===e||b.hide(),b[d]||(d=BAND),b[d](a),b.config.prevRenderedOnTop=c}band(a={}){let b,c,d=this,e=a.managerId,f=a.x1,g=a.y1,h=a.x2,i=a.y2,j=a.thickness,k=!!a.onTop,l=pluck(a.fillcolor,DEFAULTCOLOR),m=pluckNumber(a.alpha,DEFAULTALPHA),n=toRaphaelColor({color:l,alpha:m}),o=d.getLinkedParent().getChildContainer('crosslineBottom'),p=d.getLinkedParent().getChildContainer('crosslineTop');c=k?p:o,b=d.getGraphicalElement('crosslineBand'+e),b?a.animDuration?b.animate({path:[M,f,g,L,h,i]},a.animDuration,'ease-in'):b.attr({path:[M,f,g,L,h,i]}):d.addGraphicalElement('crosslineBand'+e,d.getFromEnv('paper').path({path:[M,f,g,L,h,i],stroke:n,fill:n,"stroke-width":j,"stroke-linecap":'butt'},c))}hide(){let a=this.getGraphicalElement(),b=Object.keys(a);for(let c=b.length-1;-1<c;c--)a[b[c]].stop(void 0,!0,!0),a[b[c]].remove(),delete a[b[c]]}}export default CrossLine;